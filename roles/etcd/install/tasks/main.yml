- name: 判断 Docker 是否早已安装
  shell: >
    systemctl is-active docker || echo "not running"
  register: docker_already_running

- name: 设置 container_manager_detected 变量
  set_fact:
    container_manager_detected: >-
      {%- if docker_already_running.stdout == "active" -%}
      docker
      {%- else -%}
      containerd
      {%- endif -%}

- name: 创建 kubelet 相关目录
  file: 
    name: "{{ item }}"
    state: directory
  with_items:
  - "{{ kubelet_root_dir }}"
  - /etc/systemd/system/kubelet.service.d

- block:
  - name: 在 etcd 节点创建 etcd 相关目录
    file: 
      name: "{{ item }}"
      state: directory
      owner: root
      group: root
      mode: 0700
    with_items:
    - "{{ etcd_data_dir }}"
    - /etc/kubernetes/backup/etcd
    - /etc/kubernetes/pki/etcd
    - /etc/kubernetes/manifests

  - name: 在 etcd 节点拉取相关镜像
    shell: "{{ image_pull_command }} {{ item }}"
    with_items:
    - "{{ etcd_image }}"
    - "{{ pod_infra_container_image }}"

  - name: 读取 etcd static pod yaml 文件 stat 信息
    stat: 
      path: /etc/kubernetes/manifests/etcd-external.yaml
    register: etcd_static_pod_stat

  - name: 生成 etcd static pod 文件
    template: 
      src: etcd-external.yaml.j2
      dest: /etc/kubernetes/manifests/etcd-external.yaml
      owner: root
      mode: 0644
    # when: not etcd_static_pod_stat.stat.exists
  when: inventory_hostname in (groups['etcd'] + groups['new-etcd'])

- name: 读取 kubelet.conf 文件 stat 信息
  stat: 
    path: /etc/kubernetes/kubelet.conf
  register: kubelet_conf_stat

- block:
  - name: 获取 Docker Cgroup Driver 值
    shell: docker info --format '{{ '{{' }} json .CgroupDriver {{ '}}' }}' | cut -d'"' -f2
    register: docker_cgroup_driver
    when: container_manager_detected == 'docker'

  - name: 设置 docker 为容器运行时 kubelet_cgroup_driver_detected 变量
    set_fact:
      kubelet_cgroup_driver_detected: >-
        {{ docker_cgroup_driver.stdout }}
    when: container_manager_detected == 'docker'

  - name: 设置 containerd 为容器运行时 kubelet_cgroup_driver_detected 变量
    set_fact:
      kubelet_cgroup_driver_detected: >-
        {%- if containerd_use_systemd_cgroup -%}systemd{%- else -%}cgroupfs{%- endif -%}
    when: container_manager_detected == 'containerd'

  - name: 生成临时 kubelet unit 文件
    template: 
      src: 20-kubelet-override.conf.j2
      dest: /etc/systemd/system/kubelet.service.d/20-kubelet-override.conf
      owner: root
      mode: 0644

  - name: 重新加载 daemon
    systemd:
      daemon_reload: yes

  - name: 临时启动 kubelet 以引导 etcd 运行
    service:
      name: kubelet
      state: restarted
      enabled: yes

  when: 
  - inventory_hostname in (groups['etcd'] + groups['new-etcd'])
  - not kubelet_conf_stat.stat.exists

- block:
  - name: 等待 etcd static pod 创建
    wait_for:
      timeout: 30
    when: inventory_hostname in (groups['etcd'] + groups['new-etcd'])

  - name: 检查 etcd pod 状态
    shell: crictl pods --name etcd --state Ready 2>/dev/null | grep -v "POD ID" | wc -l
    register: etcd_pod_count
    ignore_errors: yes
    when: inventory_hostname in (groups['etcd'] + groups['new-etcd'])

  - name: 检查 etcd 进程 CPU 使用率
    shell: ps aux | grep -v grep | grep etcd | awk '{print $3}' | head -1
    register: etcd_cpu_usage
    ignore_errors: yes
    when: 
      - inventory_hostname in (groups['etcd'] + groups['new-etcd'])
      - etcd_pod_count.stdout|int > 0

  - name: 检测到 etcd 异常状态，进行自动修复
    block:
      - name: 记录异常状态
        debug:
          msg: 
            - "检测到 etcd 异常状态"
            - "Pod 数量: {{ etcd_pod_count.stdout|default('0') }}"
            - "CPU 使用率: {{ etcd_cpu_usage.stdout|default('N/A') }}%"

      - name: 停止 kubelet 服务
        systemd:
          name: kubelet
          state: stopped

      - name: 强制停止 etcd 进程
        shell: pkill -9 etcd || true
        ignore_errors: yes

      - name: 清理 etcd manifest
        file:
          path: /etc/kubernetes/manifests/etcd-external.yaml
          state: absent

      - name: 清理 etcd 数据目录
        shell: rm -rf /var/lib/etcd/*
        ignore_errors: yes

      - name: 等待清理完成
        wait_for:
          timeout: 10

      - name: 重新启动 kubelet
        systemd:
          name: kubelet
          state: started

      - name: 等待 kubelet 稳定
        wait_for:
          timeout: 15

      - name: 重新生成 etcd static pod 文件
        template: 
          src: etcd-external.yaml.j2
          dest: /etc/kubernetes/manifests/etcd-external.yaml
          owner: root
          mode: 0644

      - name: 等待 etcd pod 重新创建
        wait_for:
          timeout: 30

    when: 
      - inventory_hostname in (groups['etcd'] + groups['new-etcd'])
      - (etcd_pod_count.stdout|int == 0) or (etcd_cpu_usage.stdout|default('0')|float > 80.0)

  when: inventory_hostname in (groups['etcd'] + groups['new-etcd'])

- include_tasks: docker.yml
  when: container_manager_detected == 'docker'

- include_tasks: containerd.yml
  when: container_manager_detected == 'containerd'

- block:
  - name: 移除临时 kubelet unit 文件
    file: 
      name: /etc/systemd/system/kubelet.service.d/20-kubelet-override.conf
      state: absent

  - name: 重新加载 daemon
    systemd:
      daemon_reload: yes
  - name: 停止临时启动 kubelet
    service:
      name: kubelet
      state: stopped
      enabled: yes
  when: 
  - inventory_hostname in (groups['kube-master'] + groups['kube-worker'] + groups['new-master'] + groups['new-worker']) 
  - not kubelet_conf_stat.stat.exists

- block:
  - name: 第一个 etcd 节点创建 etcd 备份工具
    template: 
      src: etcdtools.j2
      dest: /etc/kubernetes/backup/etcd/etcdtools
      owner: root
      mode: 0755
  - name: 第一个 etcd 节点创建 etcd 定时备份 crontab
    cron: 
      minute: "0"
      hour: "{{ etcd_backup_hour }}"
      name: Backup etcd databases
      job: >
        /etc/kubernetes/backup/etcd/etcdtools backup
  - name: 第一个 etcd 节点创建清理 etcd 定时备份文件 crontab
    cron: 
      minute: "30"
      hour: "{{ etcd_backup_hour }}"
      name: Clean etcd databases backup file
      job: >
        /etc/kubernetes/backup/etcd/etcdtools cleanup
  when: inventory_hostname == groups['etcd'][0]
